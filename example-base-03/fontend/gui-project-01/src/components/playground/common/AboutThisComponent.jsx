import React from 'react';
import CustomCollapse from '../../../common/components/CustomCollapse';

const AboutThisComponent = () => (
    <CustomCollapse headerText="About: Forms Playground" showBoldTitle>
        <div id="Purpose-of-this-Playground">
            <h3>Purpose of this Playground</h3>
            <pre style={styles.whitespacePreWrap}>
                {`
######################################################
## Note ##
  - FormsV11.jsx and FormsV21.jsx are my developed versions and are stable. Either of these can be used for further processing.
  - All other implementations were generated by ChatGPT, and a review is currently in progress.

Welcome to this Playground
Overall Purpose:
  - Design a reusable form system for partial updates
    of various data entities, such as:
      - Resume, Company, Project, Task, and User Profiles
  - Forms should be able to handle:
    - Real-time validations
    - Server-side API validation error handling
    - Auto-save feature for draft submissions
  - Following forms needed:
    - A YAML editor for bulk data entry
    - A form with text input fields
    - A form with a select component [TBD Later]
    - A form with checkbox groups [TBD Later]
    - A form with radio button groups [TBD Later]
    - A form with date pickers and time pickers [TBD Later]
    - A form with file upload capability [TBD Later]
  - Enhancing user experience:
    - Using modal forms for inline editing
    - Displaying toast notifications on save success or failure
    - Supporting dark mode & light mode themes
  - Feature extensions:
    - Multi-step form wizard for onboarding workflows
    - Editable grid/table support for quick inline edits
    - Role-based access control for form fields
    - Localization support (i18n) for multi-language support
    - Dynamic form fields using JSON configurations [TBD Later]
    - Debounced input for optimizing server calls
  - Future-proofing:
    - Integration with form libraries like Formik or React Hook Form [TBD]
    - Exploring performance optimizations with React.memo
    - Extending support for mobile responsive design
######################################################
`}
            </pre>
        </div>
    </CustomCollapse>
);

const styles = {
    whitespacePreWrap: {
        whiteSpace: "pre-wrap",
        fontFamily: "monospace",
        fontSize: "14px",
        lineHeight: "1.5",
        padding: "1rem",
        backgroundColor: "#f5f5f5",
        borderRadius: "5px",
        border: "1px solid #ddd",
    },
};

export default AboutThisComponent